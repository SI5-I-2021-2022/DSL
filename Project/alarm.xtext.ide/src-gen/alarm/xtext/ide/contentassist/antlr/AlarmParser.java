/*
 * generated by Xtext 2.25.0
 */
package alarm.xtext.ide.contentassist.antlr;

import alarm.xtext.ide.contentassist.antlr.internal.InternalAlarmParser;
import alarm.xtext.services.AlarmGrammarAccess;
import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class AlarmParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(AlarmGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, AlarmGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getBrickAccess().getAlternatives_0(), "rule__Brick__Alternatives_0");
			builder.put(grammarAccess.getAlarmAccess().getAlternatives(), "rule__Alarm__Alternatives");
			builder.put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
			builder.put(grammarAccess.getSIGNALAccess().getAlternatives(), "rule__SIGNAL__Alternatives");
			builder.put(grammarAccess.getAppAccess().getGroup(), "rule__App__Group__0");
			builder.put(grammarAccess.getAppAccess().getGroup_12(), "rule__App__Group_12__0");
			builder.put(grammarAccess.getAppAccess().getGroup_18(), "rule__App__Group_18__0");
			builder.put(grammarAccess.getAppAccess().getGroup_20(), "rule__App__Group_20__0");
			builder.put(grammarAccess.getAppAccess().getGroup_20_3(), "rule__App__Group_20_3__0");
			builder.put(grammarAccess.getBrickAccess().getGroup(), "rule__Brick__Group__0");
			builder.put(grammarAccess.getSensorAccess().getGroup(), "rule__Sensor__Group__0");
			builder.put(grammarAccess.getActuatorAccess().getGroup(), "rule__Actuator__Group__0");
			builder.put(grammarAccess.getStateAccess().getGroup(), "rule__State__Group__0");
			builder.put(grammarAccess.getStateAccess().getGroup_6(), "rule__State__Group_6__0");
			builder.put(grammarAccess.getEIntAccess().getGroup(), "rule__EInt__Group__0");
			builder.put(grammarAccess.getActionAccess().getGroup(), "rule__Action__Group__0");
			builder.put(grammarAccess.getTransitionAccess().getGroup(), "rule__Transition__Group__0");
			builder.put(grammarAccess.getSimpleAlarmAccess().getGroup(), "rule__SimpleAlarm__Group__0");
			builder.put(grammarAccess.getDualCheckAlarmAccess().getGroup(), "rule__DualCheckAlarm__Group__0");
			builder.put(grammarAccess.getStateBasedAlarmAccess().getGroup(), "rule__StateBasedAlarm__Group__0");
			builder.put(grammarAccess.getMultiStateAlarmAccess().getGroup(), "rule__MultiStateAlarm__Group__0");
			builder.put(grammarAccess.getAppAccess().getNameAssignment_2(), "rule__App__NameAssignment_2");
			builder.put(grammarAccess.getAppAccess().getInitialAssignment_6(), "rule__App__InitialAssignment_6");
			builder.put(grammarAccess.getAppAccess().getBricksAssignment_11(), "rule__App__BricksAssignment_11");
			builder.put(grammarAccess.getAppAccess().getBricksAssignment_12_1(), "rule__App__BricksAssignment_12_1");
			builder.put(grammarAccess.getAppAccess().getStatesAssignment_17(), "rule__App__StatesAssignment_17");
			builder.put(grammarAccess.getAppAccess().getStatesAssignment_18_1(), "rule__App__StatesAssignment_18_1");
			builder.put(grammarAccess.getAppAccess().getAlarmAssignment_20_2(), "rule__App__AlarmAssignment_20_2");
			builder.put(grammarAccess.getAppAccess().getAlarmAssignment_20_3_1(), "rule__App__AlarmAssignment_20_3_1");
			builder.put(grammarAccess.getBrickAccess().getNameAssignment_1(), "rule__Brick__NameAssignment_1");
			builder.put(grammarAccess.getBrickAccess().getPinAssignment_4(), "rule__Brick__PinAssignment_4");
			builder.put(grammarAccess.getStateAccess().getNameAssignment_1(), "rule__State__NameAssignment_1");
			builder.put(grammarAccess.getStateAccess().getActionsAssignment_5(), "rule__State__ActionsAssignment_5");
			builder.put(grammarAccess.getStateAccess().getActionsAssignment_6_1(), "rule__State__ActionsAssignment_6_1");
			builder.put(grammarAccess.getStateAccess().getTransitionAssignment_8(), "rule__State__TransitionAssignment_8");
			builder.put(grammarAccess.getActionAccess().getActuatorAssignment_1(), "rule__Action__ActuatorAssignment_1");
			builder.put(grammarAccess.getActionAccess().getValueAssignment_3(), "rule__Action__ValueAssignment_3");
			builder.put(grammarAccess.getTransitionAccess().getNextAssignment_3(), "rule__Transition__NextAssignment_3");
			builder.put(grammarAccess.getTransitionAccess().getSensorAssignment_5(), "rule__Transition__SensorAssignment_5");
			builder.put(grammarAccess.getTransitionAccess().getValueAssignment_7(), "rule__Transition__ValueAssignment_7");
			builder.put(grammarAccess.getSimpleAlarmAccess().getNameAssignment_1(), "rule__SimpleAlarm__NameAssignment_1");
			builder.put(grammarAccess.getSimpleAlarmAccess().getButtonAssignment_4(), "rule__SimpleAlarm__ButtonAssignment_4");
			builder.put(grammarAccess.getSimpleAlarmAccess().getLedAssignment_6(), "rule__SimpleAlarm__LedAssignment_6");
			builder.put(grammarAccess.getSimpleAlarmAccess().getBuzzerAssignment_8(), "rule__SimpleAlarm__BuzzerAssignment_8");
			builder.put(grammarAccess.getDualCheckAlarmAccess().getNameAssignment_1(), "rule__DualCheckAlarm__NameAssignment_1");
			builder.put(grammarAccess.getDualCheckAlarmAccess().getButtonAssignment_4(), "rule__DualCheckAlarm__ButtonAssignment_4");
			builder.put(grammarAccess.getDualCheckAlarmAccess().getBuzzerAssignment_6(), "rule__DualCheckAlarm__BuzzerAssignment_6");
			builder.put(grammarAccess.getDualCheckAlarmAccess().getButton2Assignment_8(), "rule__DualCheckAlarm__Button2Assignment_8");
			builder.put(grammarAccess.getStateBasedAlarmAccess().getNameAssignment_1(), "rule__StateBasedAlarm__NameAssignment_1");
			builder.put(grammarAccess.getStateBasedAlarmAccess().getButtonAssignment_4(), "rule__StateBasedAlarm__ButtonAssignment_4");
			builder.put(grammarAccess.getStateBasedAlarmAccess().getLedAssignment_6(), "rule__StateBasedAlarm__LedAssignment_6");
			builder.put(grammarAccess.getMultiStateAlarmAccess().getNameAssignment_1(), "rule__MultiStateAlarm__NameAssignment_1");
			builder.put(grammarAccess.getMultiStateAlarmAccess().getButtonAssignment_4(), "rule__MultiStateAlarm__ButtonAssignment_4");
			builder.put(grammarAccess.getMultiStateAlarmAccess().getBuzzerAssignment_6(), "rule__MultiStateAlarm__BuzzerAssignment_6");
			builder.put(grammarAccess.getMultiStateAlarmAccess().getLedAssignment_8(), "rule__MultiStateAlarm__LedAssignment_8");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private AlarmGrammarAccess grammarAccess;

	@Override
	protected InternalAlarmParser createParser() {
		InternalAlarmParser result = new InternalAlarmParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public AlarmGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(AlarmGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
